// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Temporary User model for relation purposes
model User {
  id    String @id @default(cuid())
  roles Role[] @relation("ModelHasRoles")
}

model Role {
  id          String       @id @default(cuid())
  name        String       @unique
  permissions Permission[] @relation("RolePermissions")
  users       User[]       @relation("ModelHasRoles")

  @@map("roles")
}

model Permission {
  id    String @id @default(cuid())
  name  String @unique
  roles Role[] @relation("RolePermissions")

  @@map("permissions")
}

// Pivot table for Roles and Permissions
model RolePermissions {
  roleId       String
  permissionId String
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@id([roleId, permissionId])
  @@map("role_has_permissions")
}

// Pivot table for Users and Roles
// Using an explicit model to match the PRD's naming convention
model ModelHasRoles {
  roleId    String
  modelType String @default("User")
  modelId   String
  role      Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)
  user      User   @relation(fields: [modelId], references: [id], onDelete: Cascade)

  @@id([roleId, modelId, modelType])
  @@map("model_has_roles")
}
